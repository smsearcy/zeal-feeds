[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "zeal-feeds"
description = "A command line application for adding user contributed docset feeds to Zeal."
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = [
  "zeal",
  "docsets",
]
authors = [
  { name = "Scott Searcy", email = "smsearcy14@outlook.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "attrs >= 21.1.0",
  "cattrs",
  "platformdirs",
  "requests",
  "rich",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/smsearcy/zeal-feeds#readme"
Issues = "https://github.com/smsearcy/zeal-feeds/issues"
Source = "https://github.com/smsearcy/zeal-feeds"

[project.scripts]
zeal-feeds = "zeal_feeds.main:main"

[tool.hatch.version]
path = "src/zeal_feeds/__about__.py"

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
]

[tool.hatch.build.targets.wheel]
packages = ["src/zeal_feeds"]

[tool.hatch.envs.default]
dependencies = [
  "mypy",
  "pre-commit",
  "pytest",
  "pytest-cov",
  "ruff == 0.0.240",
  "types-requests",
]
[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src/zeal_feeds --cov=tests {args}"
lint = [
  "pre-commit run --all-files",
  "ruff src tests",
  "mypy src tests",
]
#ruff-fix = "ruff --fix src test"
no-cov = "cov --no-cov {args}"

[[tool.hatch.envs.test.matrix]]
python = ["39", "310", "311"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "src/zeal_feeds/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
select = [
  # pyflakes
  "F",
  # pycodestyle
  "E", "W",
  # mccabe
  "C90",
  # isort
  "I",
  # pep8-naming
  "N",
  # pydocstyle
  "D",
  # flake8-2020
  "YTT",
  # flake8-bugbear"
  "B",
  # flake8-builtins
  "A",
  # pylint
  "PLC", "PLE", "PLR", "PLW",
  # flake8-comprehensions
  "C4",
  # flake8-return
  "RET",
  # flake8-simplify
  "SIM",
]
ignore = [
  "A003",  # builtin-attribute-shadowing
  "D105",  # magic-method
  "D107",  # public-init
  "D203",  # one-blank-line-before-class
  "D213",  # multi-line-summary-second-line
  "PLR2004",  # magic-value-comparison
]
